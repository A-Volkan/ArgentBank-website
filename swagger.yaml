swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
       # - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

############ transaction ##################
  
  /transactions/{month}:
    get:
      tags:
        - Transaction Module
      summary: Get Account Transactions of the month
      description: API for fetching user account transactions for a specific month
      parameters:
        - name: Authorization
          in: header
          description: Attach Bearer JWT token
          required: true
          type: string
        - name: month
          in: path
          description: Retrieve transaction of the month
          required: true
          type: string
      responses:
        '200':
          description: Transaction retrieve successfully
          schema:
            $ref: '#/definitions/TransactionsInformations'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    
          
  /transactions/detail/{id}:
    get:
      tags:
        - Transaction Module
      summary: Get Transaction by ID
      description: API for fetching information of a selected transaction
      parameters:
        - name: Authorization
          in: header
          description: Attach Bearer JWT token
          required: true
          type: string
        - name: id
          in: path
          description: Transaction identifier
          required: true
          type: string
      responses:
        '200':
          description: transaction retrieve successfully
          schema:
            $ref: '#/definitions/ApiResponseTransactions'
        '400':
          description: Transaction not found
        '500':
          description: Internal Server Error 
    patch:
      tags:
        - Transaction Module
      summary: Update Transaction Information
      description: API for updating the selected transaction, allowing addition, modification, or deletion of information.
      parameters:
        - name: Authorization
          in: header
          description: Attach Bearer JWT token
          required: true
          type: string
        - name: id
          in: path
          description: Transaction identifier
          required: true
          type: string
        - in: body
          name: body
          description: Updated editable transaction information. Allows addition, modification, or deletion of details.
          required: true
          schema:
            $ref: '#/definitions/UpdatedTransaction'
      produces:
        - application/json
      responses:
        '200':
          description: Transaction updated successfully
          schema:
            $ref: '#/definitions/ApiResponseTransactions'
        '404':
          description: Id not found
        '500':
          description: Error on the server
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string

           ############ transaction ##################
  TransactionsInformations:
    type: object
    properties: 
      status: 
        type: integer
      message: 
        type: string
      accountId:
        type: string
      currentMonth: 
        type: string
      transactions:
        type: array
        items: 
          type: object
          properties: 
            Id:
              type: string
            description:  
              type: string
              example: Golden Sun Bakery
            type:
              type: string
              example: Electronic
            category:
              type: string
              example: Food
            amount:
              type: number
            balance:
              type: number
            createdAt:
              type: string
            updatedAt:
              type: string
            notes:
              type: string

  ApiResponseTransactions:
    type: object
    properties: 
      status:
        type: integer
      message:
        type: string
      transaction:
        type: object
        properties: 
          Id:
            type: string
          createdAt: 
            type: string
          updatedAt:
            type: string
          description:
            type: string
          type:
            type: string
          category:
            type: string
          balance:
            type: number
          amount:
            type: number
          notes:
            type: string
  UpdatedTransaction:
    type: object
    properties:
      createdAt:
        type: string
      updatedAt:
        type: string
      Id:
        type: string
      category:
        type: string
        description: transaction category
      notes: 
        type: string
        description:  user notes about the transaction
      deletedNotes:
        type: boolean
         description: Indicate if the note should be deleted
         exemple: true
      deletedCategory:
         type: boolean
         description: Indicate if the category should be deleted
         exemple: true